/*! For license information please see websocket.js.LICENSE.txt */
(()=>{"use strict";var e={"./src/MenuManager/login.ts":(e,o,t)=>{t.r(o),t.d(o,{handleRoomAction:()=>i,showErrorAnimation:()=>l,updateButton:()=>a});var n=t("./src/WebSocketClient/websocket.ts"),r=document.getElementById("roomCodeInput"),s=document.getElementById("usernameInput"),c=document.getElementById("joinButton");function a(){""==s.value.trim()?c.disabled=!0:c.disabled=!1,5==r.value.trim().length?c.textContent="JOIN ROOM":c.textContent="CREATE ROOM"}function i(){"CREATE ROOM"===c.innerText?(0,n.createRoom)(s.value):(0,n.joinRoom)(r.value.toUpperCase(),s.value)}function l(){c.classList.add("red-error-message"),c.classList.add("wiggle"),setTimeout((function(){c.classList.remove("red-error-message"),c.classList.remove("wiggle")}),600)}window.updateButton=a,window.handleRoomAction=i},"./src/WebSocketClient/websocket.ts":(e,o,t)=>{t.r(o),t.d(o,{createRoom:()=>s,joinRoom:()=>c});var n,r=t("./src/MenuManager/login.ts");function s(e){n&&n.readyState===WebSocket.OPEN?n.send(JSON.stringify({type:"CREATE_ROOM",username:e})):console.error("WebSocket connection is not open")}function c(e,o){n&&n.readyState===WebSocket.OPEN?n.send(JSON.stringify({type:"JOIN_ROOM",roomCode:e,username:o})):console.error("WebSocket connection is not open")}(n=new WebSocket("ws://".concat(window.location.hostname,":8080"))).onopen=function(){console.log("WebSocket connection established")},n.onmessage=function(e){var o=JSON.parse(e.data);switch(console.log("Message from server:",o),o.type){case"ROOM_CREATED":alert("Room created successfully!");break;case"JOINED_ROOM":alert("Joined room successfully!");break;case"ROOM_DOES_NOT_EXIST":(0,r.showErrorAnimation)();break;case"ERROR":alert("Error: ".concat(o.message))}},n.onclose=function(){console.log("WebSocket connection closed")},n.onerror=function(e){console.error("WebSocket error:",e)}}},o={};function t(n){var r=o[n];if(void 0!==r)return r.exports;var s=o[n]={exports:{}};return e[n](s,s.exports,t),s.exports}t.d=(e,o)=>{for(var n in o)t.o(o,n)&&!t.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:o[n]})},t.o=(e,o)=>Object.prototype.hasOwnProperty.call(e,o),t.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},t("./src/WebSocketClient/websocket.ts")})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,