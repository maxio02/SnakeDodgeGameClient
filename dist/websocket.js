/*! For license information please see websocket.js.LICENSE.txt */
(()=>{"use strict";var e={"./src/MenuManager/login.ts":(e,t,o)=>{o.r(t),o.d(t,{handleReadyState:()=>O,handleRoomAction:()=>g,showErrorAnimation:()=>E,showRoomView:()=>b,updateButton:()=>S,updateRoomList:()=>p});var n=o("./src/WebSocketClient/websocket.ts"),r=document.getElementById("roomCodeInput"),a=document.getElementById("usernameInput"),s=document.getElementById("joinButton"),c=document.getElementById("readyButton"),i=document.getElementById("login-div"),d=document.getElementById("room-div"),l=document.getElementById("room-users-list"),u=document.getElementById("room-title"),m=document.getElementById("player-count"),y=!1;function S(){""==a.value.trim()?s.disabled=!0:s.disabled=!1,5==r.value.trim().length?s.textContent="JOIN ROOM":s.textContent="CREATE ROOM"}function g(){"CREATE ROOM"===s.innerText?(0,n.createRoom)(a.value):(0,n.joinRoom)(r.value.toUpperCase(),a.value)}function O(){y=!y,(0,n.setReadyState)(a.value,r.value,y),y?(c.classList.remove("red-button"),c.classList.add("green-button")):(c.classList.add("red-button"),c.classList.remove("green-button"))}function b(e){var t=JSON.parse(e.toString());i.classList.add("display-none"),d.classList.add("display-flex"),r.value=t.room.code,u.innerHTML="WELCOME TO<br>".concat(t.room.code),p(e)}function p(e){var t=JSON.parse(e.toString()),o=t.room.players;m.innerHTML="".concat(o.length,"/").concat(t.room.maxSize),l.innerHTML="",o.forEach((function(e){var t=document.createElement("li");t.textContent=e.username+(e.isReady?" ðŸŸ¢":" ðŸ”´"),l.appendChild(t)}))}function E(){s.classList.add("red-button"),s.classList.add("wiggle"),setTimeout((function(){s.classList.remove("red-button"),s.classList.remove("wiggle")}),600)}window.updateButton=S,window.handleRoomAction=g,window.handleReadyState=O},"./src/WebSocketClient/websocket.ts":(e,t,o)=>{o.r(t),o.d(t,{createRoom:()=>a,getReadyState:()=>i,joinRoom:()=>s,setReadyState:()=>c});var n,r=o("./src/MenuManager/login.ts");function a(e){n&&n.readyState===WebSocket.OPEN?n.send(JSON.stringify({type:"CREATE_ROOM",username:e})):console.error("WebSocket connection is not open")}function s(e,t){n&&n.readyState===WebSocket.OPEN?n.send(JSON.stringify({type:"JOIN_ROOM",roomCode:e,username:t})):console.error("WebSocket connection is not open")}function c(e,t,o){n&&n.readyState===WebSocket.OPEN?n.send(JSON.stringify({type:"SET_READY",username:e,roomCode:t,readyState:o})):console.error("WebSocket connection is not open")}function i(e){n&&n.readyState===WebSocket.OPEN?n.send(JSON.stringify({type:"GET_READY",username:e})):console.error("WebSocket connection is not open")}(n=new WebSocket("ws://".concat(window.location.hostname,":8080"))).onopen=function(){console.log("WebSocket connection established")},n.onmessage=function(e){var t=JSON.parse(e.data);switch(console.log("Message from server:",t),t.type){case"JOINED_ROOM":(0,r.showRoomView)(e.data);break;case"ROOM_DOES_NOT_EXIST":(0,r.showErrorAnimation)();break;case"ROOM_DATA":(0,r.updateRoomList)(e.data);break;case"ERROR":alert("Error: ".concat(t.message))}},n.onclose=function(){console.log("WebSocket connection closed")},n.onerror=function(e){console.error("WebSocket error:",e)}}},t={};function o(n){var r=t[n];if(void 0!==r)return r.exports;var a=t[n]={exports:{}};return e[n](a,a.exports,o),a.exports}o.d=(e,t)=>{for(var n in t)o.o(t,n)&&!o.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:t[n]})},o.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),o.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},o("./src/WebSocketClient/websocket.ts")})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,