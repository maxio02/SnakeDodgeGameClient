/*! For license information please see websocket.js.LICENSE.txt */
(()=>{"use strict";var e={"./src/MenuManager/login.ts":(e,o,t)=>{t.r(o),t.d(o,{handleReadyState:()=>f,handleRoomAction:()=>b,showErrorAnimation:()=>p,showRoomView:()=>g,updateButton:()=>S,updateRoomList:()=>O});var n=t("./src/WebSocketClient/websocket.ts"),r=document.getElementById("roomCodeInput"),a=document.getElementById("usernameInput"),s=document.getElementById("joinButton"),c=document.getElementById("readyButton"),i=document.getElementById("login-div"),d=document.getElementById("room-div"),l=document.getElementById("room-users-list"),u=document.getElementById("room-title"),m=document.getElementById("player-count"),y=!1;function S(){""==a.value.trim()?s.disabled=!0:s.disabled=!1,5==r.value.trim().length?s.textContent="JOIN ROOM":s.textContent="CREATE ROOM"}function b(){"CREATE ROOM"===s.innerText?(0,n.createRoom)(a.value):(0,n.joinRoom)(r.value.toUpperCase(),a.value)}function f(){y=!y,(0,n.setReadyState)(a.value,r.value,y),y?(c.classList.remove("red-button"),c.classList.add("green-button")):(c.classList.add("red-button"),c.classList.remove("green-button"))}function g(e){var o=JSON.parse(e.toString());i.classList.add("display-none"),d.classList.add("display-flex"),r.value=o.room.code,u.innerHTML="WELCOME TO<br>".concat(o.room.code),O(e)}function O(e){var o=JSON.parse(e.toString()),t=o.room.players;m.innerHTML="".concat(t.length,"/").concat(o.room.maxSize),l.innerHTML="",t.forEach((function(e){var t=document.createElement("li");t.textContent=e.username+"",e.username==o.room.host.username&&t.insertAdjacentHTML("afterbegin",'<i class="fa-solid fa-crown" style="color: #ffd700;"></i>'),e.isReady?t.insertAdjacentHTML("beforeend",' <i class="fa-solid fa-circle" style="color: #37cb48;"></i>'):t.insertAdjacentHTML("beforeend",' <i class="fa-solid fa-circle" style="color: #cb3737;"></i>'),l.appendChild(t)}))}function p(){s.classList.add("red-button"),s.classList.add("wiggle"),setTimeout((function(){s.classList.remove("red-button"),s.classList.remove("wiggle")}),600)}window.onload=function(){S()},window.updateButton=S,window.handleRoomAction=b,window.handleReadyState=f},"./src/WebSocketClient/websocket.ts":(e,o,t)=>{t.r(o),t.d(o,{createRoom:()=>a,getReadyState:()=>i,joinRoom:()=>s,sendKeyEventToServer:()=>d,setReadyState:()=>c});var n,r=t("./src/MenuManager/login.ts");function a(e){n&&n.readyState===WebSocket.OPEN?n.send(JSON.stringify({type:"CREATE_ROOM",username:e})):console.error("WebSocket connection is not open")}function s(e,o){n&&n.readyState===WebSocket.OPEN?n.send(JSON.stringify({type:"JOIN_ROOM",roomCode:e,username:o})):console.error("WebSocket connection is not open")}function c(e,o,t){n&&n.readyState===WebSocket.OPEN?n.send(JSON.stringify({type:"SET_READY",username:e,roomCode:o,readyState:t})):console.error("WebSocket connection is not open")}function i(e){n&&n.readyState===WebSocket.OPEN?n.send(JSON.stringify({type:"GET_READY",username:e})):console.error("WebSocket connection is not open")}function d(e,o){n&&n.readyState===WebSocket.OPEN?n.send(JSON.stringify({type:"KEY_EVENT",key:e,pressed:o})):console.error("WebSocket connection is not open")}(n=new WebSocket("ws://".concat(window.location.hostname,":8080"))).onopen=function(){console.log("WebSocket connection established")},n.onmessage=function(e){var o=JSON.parse(e.data);switch(console.log("Message from server:",o),o.type){case"JOINED_ROOM":(0,r.showRoomView)(e.data);break;case"ROOM_DOES_NOT_EXIST":(0,r.showErrorAnimation)();break;case"ROOM_DATA":(0,r.updateRoomList)(e.data);break;case"GAMEPLAY":break;case"ERROR":alert("Error: ".concat(o.message))}},n.onclose=function(){console.log("WebSocket connection closed")},n.onerror=function(e){console.error("WebSocket error:",e)}}},o={};function t(n){var r=o[n];if(void 0!==r)return r.exports;var a=o[n]={exports:{}};return e[n](a,a.exports,t),a.exports}t.d=(e,o)=>{for(var n in o)t.o(o,n)&&!t.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:o[n]})},t.o=(e,o)=>Object.prototype.hasOwnProperty.call(e,o),t.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},t("./src/WebSocketClient/websocket.ts")})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,