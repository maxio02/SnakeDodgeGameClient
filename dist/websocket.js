/*! For license information please see websocket.js.LICENSE.txt */
(()=>{"use strict";var e={"./src/MenuManager/login.ts":(e,t,o)=>{o.r(t),o.d(t,{handleReadyState:()=>E,handleRoomAction:()=>w,showErrorAnimation:()=>M,showRoomView:()=>O,updateButton:()=>v,updateColorPicker:()=>P,updatePlayerColor:()=>k,updateRoomList:()=>R});var n=o("./src/ViewModels/Player.ts"),r=o("./src/ViewModels/Room.ts"),s=o("./src/WebSocketClient/websocket.ts"),a=null,i=null,c=document.getElementById("roomCodeInput"),l=document.getElementById("usernameInput"),d=document.getElementById("joinButton"),u=document.getElementById("readyButton"),y=document.getElementById("login-div"),m=document.getElementById("room-div"),p=document.getElementById("color-picker"),g=document.getElementById("room-users-list"),f=document.getElementById("room-code"),b=document.getElementById("player-count"),h=document.getElementById("color-picker-container"),S=document.getElementById("start-progress-bar");function v(){""==l.value.trim()?d.disabled=!0:d.disabled=!1,5==c.value.trim().length?d.textContent="JOIN ROOM":d.textContent="CREATE ROOM"}function w(){var e=l.value;e&&(i=new n.Player(e),"CREATE ROOM"===d.innerText?(0,s.createRoom)(l.value):(0,s.joinRoom)(c.value.toUpperCase(),l.value))}function E(){i.isReady=!i.isReady,(0,s.setPlayerData)(i,a.getCode()),i.isReady?(u.classList.remove("red-button"),u.classList.add("green-button")):(u.classList.add("red-button"),u.classList.remove("green-button"))}function O(e){var t=JSON.parse(e.toString());a=new r.Room(t.room.code,t.room.host,t.room.players,t.room.maxSize),i.username==a.getHost().username&&document.getElementById("startButton").classList.remove("display-none"),h.style.backgroundColor=i.color,p.value=i.color,document.getElementById("color-label").style.color=C(p.value,"#FFFFFF","#000000"),y.classList.add("display-none"),m.classList.add("display-flex"),c.value=a.getCode(),f.innerHTML=a.getCode(),(0,s.setPlayerData)(i,a.getCode()),R(e)}function R(e){var t,o,n=JSON.parse(e.toString());a.setPlayers(n.room.players),a.setHost(n.room.host),a.setMaxSize(n.room.maxSize),b.innerHTML="".concat(a.getPlayers().length,"/").concat(a.getMaxSize()),g.innerHTML="",a.getPlayers().forEach((function(e){var t=document.createElement("li");t.textContent=e.username+"",e.username==a.getHost().username?t.insertAdjacentHTML("afterbegin",'<i class="fa-solid fa-crown" style="color: '.concat(e.color,';"></i>')):t.insertAdjacentHTML("afterbegin",'<i class="fa-solid fa-circle" style="color: '.concat(e.color,'; margin-left: 4px"></i>')),e.isReady?t.insertAdjacentHTML("beforeend",' <i class="fa-solid fa-circle" style="color: #37cb48;"></i>'):t.insertAdjacentHTML("beforeend",' <i class="fa-solid fa-circle" style="color: #cb3737;"></i>'),g.appendChild(t)})),t=a.getPlayers().filter((function(e){return e.isReady})).length,0!=(o=a.getMaxSize())&&(S.style.width=Math.floor(t/o*100)+"%")}function M(){d.classList.add("red-button"),d.classList.add("wiggle"),setTimeout((function(){d.classList.remove("red-button"),d.classList.remove("wiggle")}),600)}function P(){h.style.backgroundColor=p.value}function k(){i.color=p.value,document.getElementById("color-label").style.color=C(p.value,"#FFFFFF","#000000"),(0,s.setPlayerData)(i,a.getCode())}function C(e,t,o){var n="#"===e.charAt(0)?e.substring(1,7):e,r=[parseInt(n.substring(0,2),16)/255,parseInt(n.substring(2,4),16)/255,parseInt(n.substring(4,6),16)/255].map((function(e){return e<=.03928?e/12.92:Math.pow((e+.055)/1.055,2.4)}));return.2126*r[0]+.7152*r[1]+.0722*r[2]>.4?o:t}window.onload=function(){v()},window.updateButton=v,window.handleRoomAction=w,window.handleReadyState=E,window.updateColorPicker=P,window.updatePlayerColor=k,window.startGame=function(){}},"./src/ViewModels/Player.ts":(e,t,o)=>{o.r(t),o.d(t,{Player:()=>n});var n=function(){function e(e,t){void 0===t&&(t=!1),this.username=e,this.isReady=t,this.color="#000000".replace(/0/g,(function(){return(~~(16*Math.random())).toString(16)}))}return e.prototype.toJSON=function(){return{username:this.username,isReady:this.isReady,color:this.color}},e}()},"./src/ViewModels/Room.ts":(e,t,o)=>{o.r(t),o.d(t,{Room:()=>n});var n=function(){function e(e,t,o,n){void 0===n&&(n=5),this.players=[],this.code=e,this.host=t,this.maxSize=n,null!=o?this.players=o:this.addPlayer(t)}return e.prototype.addPlayer=function(e){return!(this.players.length>=this.maxSize||(this.players.push(e),0))},e.prototype.getCode=function(){return this.code},e.prototype.getPlayers=function(){return this.players},e.prototype.getHost=function(){return this.host},e.prototype.setHost=function(e){this.host=e},e.prototype.setPlayers=function(e){this.players=e},e.prototype.setMaxSize=function(e){this.maxSize=e},e.prototype.getMaxSize=function(){return this.maxSize},e}()},"./src/WebSocketClient/websocket.ts":(e,t,o)=>{o.r(t),o.d(t,{createRoom:()=>s,joinRoom:()=>a,sendKeyEventToServer:()=>c,setPlayerData:()=>i});var n,r=o("./src/MenuManager/login.ts");function s(e){n&&n.readyState===WebSocket.OPEN?n.send(JSON.stringify({type:"CREATE_ROOM",username:e})):console.error("WebSocket connection is not open")}function a(e,t){n&&n.readyState===WebSocket.OPEN?n.send(JSON.stringify({type:"JOIN_ROOM",roomCode:e,username:t})):console.error("WebSocket connection is not open")}function i(e,t){n&&n.readyState===WebSocket.OPEN?n.send(JSON.stringify({type:"PLAYER_DATA",player:e,roomCode:t})):console.error("WebSocket connection is not open")}function c(e,t){n&&n.readyState===WebSocket.OPEN?n.send(JSON.stringify({type:"KEY_EVENT",key:e,pressed:t})):console.error("WebSocket connection is not open")}(n=new WebSocket("ws://".concat(window.location.hostname,":8080"))).onopen=function(){console.log("WebSocket connection established")},n.onmessage=function(e){var t=JSON.parse(e.data);switch(console.log("Message from server:",t),t.type){case"JOINED_ROOM":(0,r.showRoomView)(e.data);break;case"ROOM_DOES_NOT_EXIST":(0,r.showErrorAnimation)();break;case"ROOM_DATA":(0,r.updateRoomList)(e.data);break;case"GAMEPLAY":break;case"ERROR":alert("Error: ".concat(t.message))}},n.onclose=function(){console.log("WebSocket connection closed")},n.onerror=function(e){console.error("WebSocket error:",e)}}},t={};function o(n){var r=t[n];if(void 0!==r)return r.exports;var s=t[n]={exports:{}};return e[n](s,s.exports,o),s.exports}o.d=(e,t)=>{for(var n in t)o.o(t,n)&&!o.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:t[n]})},o.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),o.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},o("./src/WebSocketClient/websocket.ts")})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QUFLSixFQUFLQyxHQ0NsRmQsRUFBb0JrQixFQUFLZixJQUNILG9CQUFYZ0IsUUFBMEJBLE9BQU9DLGFBQzFDWCxPQUFPQyxlQUFlUCxFQUFTZ0IsT0FBT0MsWUFBYSxDQUFFNUgsTUFBTyxXQUU3RGlILE9BQU9DLGVBQWVQLEVBQVMsYUFBYyxDQUFFM0csT0FBTyxHQUFPLEVDRnBDd0csRUFBb0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zbmFrZV9nYW1lLy4vc3JjL01lbnVNYW5hZ2VyL2xvZ2luLnRzIiwid2VicGFjazovL3NuYWtlX2dhbWUvLi9zcmMvVmlld01vZGVscy9QbGF5ZXIudHMiLCJ3ZWJwYWNrOi8vc25ha2VfZ2FtZS8uL3NyYy9WaWV3TW9kZWxzL1Jvb20udHMiLCJ3ZWJwYWNrOi8vc25ha2VfZ2FtZS8uL3NyYy9XZWJTb2NrZXRDbGllbnQvd2Vic29ja2V0LnRzIiwid2VicGFjazovL3NuYWtlX2dhbWUvd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vc25ha2VfZ2FtZS93ZWJwYWNrL3J1bnRpbWUvZGVmaW5lIHByb3BlcnR5IGdldHRlcnMiLCJ3ZWJwYWNrOi8vc25ha2VfZ2FtZS93ZWJwYWNrL3J1bnRpbWUvaGFzT3duUHJvcGVydHkgc2hvcnRoYW5kIiwid2VicGFjazovL3NuYWtlX2dhbWUvd2VicGFjay9ydW50aW1lL21ha2UgbmFtZXNwYWNlIG9iamVjdCIsIndlYnBhY2s6Ly9zbmFrZV9nYW1lL3dlYnBhY2svc3RhcnR1cCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBQbGF5ZXIgfSBmcm9tIFwiLi4vVmlld01vZGVscy9QbGF5ZXJcIjtcclxuaW1wb3J0IHsgUm9vbSB9IGZyb20gXCIuLi9WaWV3TW9kZWxzL1Jvb21cIjtcclxuaW1wb3J0IHsgY3JlYXRlUm9vbSwgam9pblJvb20sIHNldFBsYXllckRhdGEgfSBmcm9tIFwiLi4vV2ViU29ja2V0Q2xpZW50L3dlYnNvY2tldFwiO1xyXG5cclxuXHJcbmxldCBjdXJyZW50Um9vbTogUm9vbSB8IG51bGwgPSBudWxsO1xyXG5sZXQgY3VycmVudFBsYXllcjogUGxheWVyIHwgbnVsbCA9IG51bGw7XHJcblxyXG5jb25zdCByb29tQ29kZUlucHV0ID0gKGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdyb29tQ29kZUlucHV0JykgYXMgSFRNTElucHV0RWxlbWVudCk7XHJcbmNvbnN0IHVzZXJuYW1lSW5wdXQgPSAoZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3VzZXJuYW1lSW5wdXQnKSBhcyBIVE1MSW5wdXRFbGVtZW50KTtcclxuY29uc3Qgcm9vbUJ1dHRvbiA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdqb2luQnV0dG9uJykgYXMgSFRNTEJ1dHRvbkVsZW1lbnQ7XHJcbmNvbnN0IHJlYWR5QnV0dG9uID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3JlYWR5QnV0dG9uJykgYXMgSFRNTEJ1dHRvbkVsZW1lbnQ7XHJcbmNvbnN0IGxvZ2luRGl2PSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnbG9naW4tZGl2JykgYXMgSFRNTEJ1dHRvbkVsZW1lbnQ7XHJcbmNvbnN0IHJvb21EaXY9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdyb29tLWRpdicpIGFzIEhUTUxCdXR0b25FbGVtZW50O1xyXG5jb25zdCBjb2xvclBpY2tlciA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdjb2xvci1waWNrZXInKSBhcyBIVE1MSW5wdXRFbGVtZW50O1xyXG5jb25zdCByb29tVXNlcnNMaXN0ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3Jvb20tdXNlcnMtbGlzdCcpIGFzIEhUTUxVTGlzdEVsZW1lbnQ7XHJcbmNvbnN0IHJvb21Db2RlU3Bhbj0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3Jvb20tY29kZScpIGFzIEhUTUxQYXJhZ3JhcGhFbGVtZW50O1xyXG5jb25zdCBwbGF5ZXJDb3VudCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdwbGF5ZXItY291bnQnKSBhcyBIVE1MUGFyYWdyYXBoRWxlbWVudDtcclxuY29uc3QgY29sb3JQaWNrZXJEaXYgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnY29sb3ItcGlja2VyLWNvbnRhaW5lcicpO1xyXG5jb25zdCBzdGFydFByb2dyZXNzQmFyID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3N0YXJ0LXByb2dyZXNzLWJhcicpO1xyXG4vLyBzcmMvbG9naW4udHNcclxuZXhwb3J0IGZ1bmN0aW9uIHVwZGF0ZUJ1dHRvbigpIHtcclxuICAgIFxyXG5cclxuICAgIGlmICh1c2VybmFtZUlucHV0LnZhbHVlLnRyaW0oKSA9PSAnJykge1xyXG4gICAgICAgIHJvb21CdXR0b24uZGlzYWJsZWQgPSB0cnVlO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgICByb29tQnV0dG9uLmRpc2FibGVkID0gZmFsc2U7XHJcbiAgICB9XHJcblxyXG4gICAgaWYgKHJvb21Db2RlSW5wdXQudmFsdWUudHJpbSgpLmxlbmd0aCA9PSA1KSB7XHJcbiAgICAgICAgcm9vbUJ1dHRvbi50ZXh0Q29udGVudCA9ICdKT0lOIFJPT00nO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgICByb29tQnV0dG9uLnRleHRDb250ZW50ID0gJ0NSRUFURSBST09NJztcclxuICAgIH1cclxufVxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIGhhbmRsZVJvb21BY3Rpb24oKSB7XHJcbiAgICBjb25zdCB1c2VybmFtZSA9IHVzZXJuYW1lSW5wdXQudmFsdWU7XHJcbiAgICBpZiAoIXVzZXJuYW1lKSByZXR1cm47XHJcbiAgICBcclxuICAgIGN1cnJlbnRQbGF5ZXIgPSBuZXcgUGxheWVyKHVzZXJuYW1lKTtcclxuXHJcbiAgICBpZiAocm9vbUJ1dHRvbi5pbm5lclRleHQgPT09ICdDUkVBVEUgUk9PTScpIHtcclxuICAgICAgICBjcmVhdGVSb29tKHVzZXJuYW1lSW5wdXQudmFsdWUpO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgICBcclxuICAgICAgICBqb2luUm9vbShyb29tQ29kZUlucHV0LnZhbHVlLnRvVXBwZXJDYXNlKCksIHVzZXJuYW1lSW5wdXQudmFsdWUpO1xyXG4gICAgfVxyXG59XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gaGFuZGxlUmVhZHlTdGF0ZSgpIHtcclxuICAgIFxyXG4gICAgY3VycmVudFBsYXllci5pc1JlYWR5ID0gIWN1cnJlbnRQbGF5ZXIuaXNSZWFkeTtcclxuICAgIHNldFBsYXllckRhdGEoY3VycmVudFBsYXllciwgY3VycmVudFJvb20uZ2V0Q29kZSgpKTtcclxuICAgIHVwZGF0ZVJlYWR5QnV0dG9uKGN1cnJlbnRQbGF5ZXIuaXNSZWFkeSk7XHJcbiAgICBcclxufVxyXG5cclxuZnVuY3Rpb24gdXBkYXRlUmVhZHlCdXR0b24oaXNSZWFkeTogYm9vbGVhbikge1xyXG4gICAgaWYoaXNSZWFkeSl7XHJcbiAgICAgICAgcmVhZHlCdXR0b24uY2xhc3NMaXN0LnJlbW92ZSgncmVkLWJ1dHRvbicpO1xyXG4gICAgICAgIHJlYWR5QnV0dG9uLmNsYXNzTGlzdC5hZGQoJ2dyZWVuLWJ1dHRvbicpO1xyXG4gICAgfVxyXG4gICAgZWxzZXtcclxuICAgICAgICByZWFkeUJ1dHRvbi5jbGFzc0xpc3QuYWRkKCdyZWQtYnV0dG9uJyk7XHJcbiAgICAgICAgcmVhZHlCdXR0b24uY2xhc3NMaXN0LnJlbW92ZSgnZ3JlZW4tYnV0dG9uJyk7XHJcbiAgICB9XHJcbn1cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBzaG93Um9vbVZpZXcoZGF0YTogSlNPTil7XHJcbiAgICAvL3NldCB0aGUgY2xpZW50IFZpZXdNb2RlbCBvZiB0aGUgcm9vbSB0byB0aGUgc2VydmVycyByZXNwb25zZVxyXG4gICAgbGV0IHJvb21JbmZvID0gSlNPTi5wYXJzZShkYXRhLnRvU3RyaW5nKCkpO1xyXG4gICAgY3VycmVudFJvb20gPSBuZXcgUm9vbSAocm9vbUluZm9bJ3Jvb20nXVsnY29kZSddLCByb29tSW5mb1sncm9vbSddWydob3N0J10sIHJvb21JbmZvWydyb29tJ11bJ3BsYXllcnMnXSwgcm9vbUluZm9bJ3Jvb20nXVsnbWF4U2l6ZSddKVxyXG5cclxuICAgICAgICAvL3Nob3cgc3RhcnRHYW1lQnV0dG9uIFxyXG4gICAgICAgIGlmKGN1cnJlbnRQbGF5ZXIudXNlcm5hbWUgPT0gY3VycmVudFJvb20uZ2V0SG9zdCgpLnVzZXJuYW1lKSBcclxuICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3N0YXJ0QnV0dG9uJykuY2xhc3NMaXN0LnJlbW92ZSgnZGlzcGxheS1ub25lJyk7XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAvL3NldCBhIHJhbmRvbSBjb2xvciBmb3IgYSBwbGF5ZXJcclxuICAgIGNvbG9yUGlja2VyRGl2LnN0eWxlLmJhY2tncm91bmRDb2xvciA9IGN1cnJlbnRQbGF5ZXIuY29sb3I7XHJcbiAgICBjb2xvclBpY2tlci52YWx1ZSA9IGN1cnJlbnRQbGF5ZXIuY29sb3I7XHJcbiAgICBsZXQgY29sb3JQaWNrZXJMYWJlbCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdjb2xvci1sYWJlbCcpO1xyXG4gICAgY29sb3JQaWNrZXJMYWJlbC5zdHlsZS5jb2xvciA9IHBpY2tUZXh0Q29sb3JCYXNlZE9uQmdDb2xvckFkdmFuY2VkKGNvbG9yUGlja2VyLnZhbHVlLCAnI0ZGRkZGRicsICcjMDAwMDAwJyk7XHJcblxyXG4gICAgLy9zaG93IHRoZSBuZXcgZWxlbWVudFxyXG4gICAgbG9naW5EaXYuY2xhc3NMaXN0LmFkZCgnZGlzcGxheS1ub25lJyk7XHJcbiAgICByb29tRGl2LmNsYXNzTGlzdC5hZGQoJ2Rpc3BsYXktZmxleCcpO1xyXG5cclxuXHJcblxyXG4gICAgcm9vbUNvZGVJbnB1dC52YWx1ZSA9IGN1cnJlbnRSb29tLmdldENvZGUoKTtcclxuICAgIHJvb21Db2RlU3Bhbi5pbm5lckhUTUwgID0gY3VycmVudFJvb20uZ2V0Q29kZSgpO1xyXG4gICAgc2V0UGxheWVyRGF0YShjdXJyZW50UGxheWVyLCBjdXJyZW50Um9vbS5nZXRDb2RlKCkpO1xyXG4gICAgdXBkYXRlUm9vbUxpc3QoZGF0YSk7XHJcbiAgICBcclxufVxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIHVwZGF0ZVJvb21MaXN0KGRhdGE6IEpTT04pe1xyXG4gICAgbGV0IHJvb21JbmZvID0gSlNPTi5wYXJzZShkYXRhLnRvU3RyaW5nKCkpO1xyXG5cclxuICAgIC8vIHVwZGF0aW5nIHRoZSBjdXJyZW50IHJvb20gcGxheWVycyBhbmQgaG9zdFxyXG4gICAgY3VycmVudFJvb20uc2V0UGxheWVycyhyb29tSW5mb1sncm9vbSddWydwbGF5ZXJzJ10pO1xyXG4gICAgY3VycmVudFJvb20uc2V0SG9zdChyb29tSW5mb1sncm9vbSddWydob3N0J10pO1xyXG4gICAgY3VycmVudFJvb20uc2V0TWF4U2l6ZShyb29tSW5mb1sncm9vbSddWydtYXhTaXplJ10pXHJcbiAgICBcclxuXHJcbiAgICBwbGF5ZXJDb3VudC5pbm5lckhUTUwgPSBgJHtjdXJyZW50Um9vbS5nZXRQbGF5ZXJzKCkubGVuZ3RofS8ke2N1cnJlbnRSb29tLmdldE1heFNpemUoKX1gO1xyXG4gICAgcm9vbVVzZXJzTGlzdC5pbm5lckhUTUwgPSAnJztcclxuXHJcbiAgICBjdXJyZW50Um9vbS5nZXRQbGF5ZXJzKCkuZm9yRWFjaCgocGxheWVyOiB7IHVzZXJuYW1lOiBzdHJpbmcgfCBudW1iZXI7IGlzUmVhZHk6IGJvb2xlYW47IGNvbG9yOiBzdHJpbmc7fSkgPT4ge1xyXG4gICAgICAgIGNvbnN0IHBsYXllckl0ZW0gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdsaScpO1xyXG5cclxuICAgICAgICBwbGF5ZXJJdGVtLnRleHRDb250ZW50ID0gcGxheWVyLnVzZXJuYW1lICsgJyc7XHJcbiAgICAgICAgXHJcbiAgICAgICAgaWYocGxheWVyLnVzZXJuYW1lID09IGN1cnJlbnRSb29tLmdldEhvc3QoKS51c2VybmFtZSkge1xyXG4gICAgICAgICAgICBwbGF5ZXJJdGVtLmluc2VydEFkamFjZW50SFRNTCgnYWZ0ZXJiZWdpbicsIGA8aSBjbGFzcz1cImZhLXNvbGlkIGZhLWNyb3duXCIgc3R5bGU9XCJjb2xvcjogJHtwbGF5ZXIuY29sb3J9O1wiPjwvaT5gKVxyXG4gICAgICAgICAgICBcclxuICAgICAgICB9ZWxzZXtcclxuICAgICAgICAgICAgcGxheWVySXRlbS5pbnNlcnRBZGphY2VudEhUTUwoJ2FmdGVyYmVnaW4nLCBgPGkgY2xhc3M9XCJmYS1zb2xpZCBmYS1jaXJjbGVcIiBzdHlsZT1cImNvbG9yOiAke3BsYXllci5jb2xvcn07IG1hcmdpbi1sZWZ0OiA0cHhcIj48L2k+YClcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGlmIChwbGF5ZXIuaXNSZWFkeSkge1xyXG4gICAgICAgICAgICBwbGF5ZXJJdGVtLmluc2VydEFkamFjZW50SFRNTCgnYmVmb3JlZW5kJywgJyA8aSBjbGFzcz1cImZhLXNvbGlkIGZhLWNpcmNsZVwiIHN0eWxlPVwiY29sb3I6ICMzN2NiNDg7XCI+PC9pPicpO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIHBsYXllckl0ZW0uaW5zZXJ0QWRqYWNlbnRIVE1MKCdiZWZvcmVlbmQnLCAnIDxpIGNsYXNzPVwiZmEtc29saWQgZmEtY2lyY2xlXCIgc3R5bGU9XCJjb2xvcjogI2NiMzczNztcIj48L2k+Jyk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICByb29tVXNlcnNMaXN0LmFwcGVuZENoaWxkKHBsYXllckl0ZW0pO1xyXG4gICAgfSk7XHJcblxyXG4gICAgdXBkYXRlU3RhcnRCdXR0b25Qcm9ncmVzcyhjdXJyZW50Um9vbS5nZXRQbGF5ZXJzKCkuZmlsdGVyKHAgPT4gcC5pc1JlYWR5KS5sZW5ndGgsIGN1cnJlbnRSb29tLmdldE1heFNpemUoKSk7XHJcbn1cclxuXHJcblxyXG5mdW5jdGlvbiB1cGRhdGVTdGFydEJ1dHRvblByb2dyZXNzKHJlYWR5UGxheWVyQ291bnQ6IG51bWJlciwgbWF4UGxheWVyQ291bnQ6IG51bWJlcil7XHJcbiAgICBpZiAobWF4UGxheWVyQ291bnQgPT0gMCl7XHJcbiAgICAgICAgcmV0dXJuO1xyXG4gICAgfVxyXG4gICAgc3RhcnRQcm9ncmVzc0Jhci5zdHlsZS53aWR0aCA9ICBNYXRoLmZsb29yKHJlYWR5UGxheWVyQ291bnQvbWF4UGxheWVyQ291bnQqMTAwKSArICclJztcclxufVxyXG5leHBvcnQgZnVuY3Rpb24gc2hvd0Vycm9yQW5pbWF0aW9uKCkge1xyXG4gICAgcm9vbUJ1dHRvbi5jbGFzc0xpc3QuYWRkKCdyZWQtYnV0dG9uJyk7XHJcbiAgICByb29tQnV0dG9uLmNsYXNzTGlzdC5hZGQoJ3dpZ2dsZScpO1xyXG4gICAgc2V0VGltZW91dCgoKSA9PiB7XHJcbiAgICByb29tQnV0dG9uLmNsYXNzTGlzdC5yZW1vdmUoJ3JlZC1idXR0b24nKTtcclxuICAgIHJvb21CdXR0b24uY2xhc3NMaXN0LnJlbW92ZSgnd2lnZ2xlJyk7XHJcbiAgICB9LCA2MDApXHJcbn1cclxuXHJcblxyXG5leHBvcnQgZnVuY3Rpb24gdXBkYXRlQ29sb3JQaWNrZXIoKSB7XHJcbiAgICBjb2xvclBpY2tlckRpdi5zdHlsZS5iYWNrZ3JvdW5kQ29sb3IgPSBjb2xvclBpY2tlci52YWx1ZTtcclxufVxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIHVwZGF0ZVBsYXllckNvbG9yKCkge1xyXG4gICAgY3VycmVudFBsYXllci5jb2xvciA9IGNvbG9yUGlja2VyLnZhbHVlO1xyXG4gICAgbGV0IGNvbG9yUGlja2VyTGFiZWwgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnY29sb3ItbGFiZWwnKTtcclxuICAgIGNvbG9yUGlja2VyTGFiZWwuc3R5bGUuY29sb3IgPSBwaWNrVGV4dENvbG9yQmFzZWRPbkJnQ29sb3JBZHZhbmNlZChjb2xvclBpY2tlci52YWx1ZSwgJyNGRkZGRkYnLCAnIzAwMDAwMCcpO1xyXG4gICAgc2V0UGxheWVyRGF0YShjdXJyZW50UGxheWVyLCBjdXJyZW50Um9vbS5nZXRDb2RlKCkpO1xyXG59XHJcblxyXG5mdW5jdGlvbiBwaWNrVGV4dENvbG9yQmFzZWRPbkJnQ29sb3JBZHZhbmNlZChiZ0NvbG9yOnN0cmluZywgbGlnaHRDb2xvcjogc3RyaW5nLCBkYXJrQ29sb3I6IHN0cmluZykge1xyXG4gICAgdmFyIGNvbG9yID0gKGJnQ29sb3IuY2hhckF0KDApID09PSAnIycpID8gYmdDb2xvci5zdWJzdHJpbmcoMSwgNykgOiBiZ0NvbG9yO1xyXG4gICAgdmFyIHIgPSBwYXJzZUludChjb2xvci5zdWJzdHJpbmcoMCwgMiksIDE2KTsgLy8gaGV4VG9SXHJcbiAgICB2YXIgZyA9IHBhcnNlSW50KGNvbG9yLnN1YnN0cmluZygyLCA0KSwgMTYpOyAvLyBoZXhUb0dcclxuICAgIHZhciBiID0gcGFyc2VJbnQoY29sb3Iuc3Vic3RyaW5nKDQsIDYpLCAxNik7IC8vIGhleFRvQlxyXG4gICAgdmFyIHVpY29sb3JzID0gW3IgLyAyNTUsIGcgLyAyNTUsIGIgLyAyNTVdO1xyXG4gICAgdmFyIGMgPSB1aWNvbG9ycy5tYXAoKGNvbCkgPT4ge1xyXG4gICAgICBpZiAoY29sIDw9IDAuMDM5MjgpIHtcclxuICAgICAgICByZXR1cm4gY29sIC8gMTIuOTI7XHJcbiAgICAgIH1cclxuICAgICAgcmV0dXJuIE1hdGgucG93KChjb2wgKyAwLjA1NSkgLyAxLjA1NSwgMi40KTtcclxuICAgIH0pO1xyXG4gICAgdmFyIEwgPSAoMC4yMTI2ICogY1swXSkgKyAoMC43MTUyICogY1sxXSkgKyAoMC4wNzIyICogY1syXSk7XHJcbiAgICByZXR1cm4gKEwgPiAwLjQpID8gZGFya0NvbG9yIDogbGlnaHRDb2xvcjtcclxuICB9XHJcblxyXG4gIGZ1bmN0aW9uIHN0YXJ0R2FtZSgpIHtcclxuXHJcbiAgfVxyXG5cclxud2luZG93Lm9ubG9hZCA9ICgpID0+IHtcclxuICAgIHVwZGF0ZUJ1dHRvbigpO1xyXG59O1xyXG5cclxuKHdpbmRvdyBhcyBhbnkpLnVwZGF0ZUJ1dHRvbiA9IHVwZGF0ZUJ1dHRvbjtcclxuKHdpbmRvdyBhcyBhbnkpLmhhbmRsZVJvb21BY3Rpb24gPSBoYW5kbGVSb29tQWN0aW9uO1xyXG4od2luZG93IGFzIGFueSkuaGFuZGxlUmVhZHlTdGF0ZSA9IGhhbmRsZVJlYWR5U3RhdGU7XHJcbih3aW5kb3cgYXMgYW55KS51cGRhdGVDb2xvclBpY2tlciA9IHVwZGF0ZUNvbG9yUGlja2VyO1xyXG4od2luZG93IGFzIGFueSkudXBkYXRlUGxheWVyQ29sb3IgPSB1cGRhdGVQbGF5ZXJDb2xvcjtcclxuKHdpbmRvdyBhcyBhbnkpLnN0YXJ0R2FtZSA9IHN0YXJ0R2FtZTsiLCJleHBvcnQgY2xhc3MgUGxheWVyIHtcclxuICAgIHB1YmxpYyB1c2VybmFtZTogc3RyaW5nO1xyXG4gICAgcHVibGljIGlzUmVhZHk6IGJvb2xlYW47XHJcbiAgICBwdWJsaWMgY29sb3I6IHN0cmluZztcclxuICAgIFxyXG4gICAgY29uc3RydWN0b3IodXNlcm5hbWU6IHN0cmluZywgaXNSZWFkeTogYm9vbGVhbiA9IGZhbHNlKSB7XHJcbiAgICAgICAgdGhpcy51c2VybmFtZSA9IHVzZXJuYW1lO1xyXG4gICAgICAgIHRoaXMuaXNSZWFkeSA9IGlzUmVhZHk7XHJcbiAgICAgICAgdGhpcy5jb2xvciA9IFwiIzAwMDAwMFwiLnJlcGxhY2UoLzAvZyxmdW5jdGlvbigpe3JldHVybiAofn4oTWF0aC5yYW5kb20oKSoxNikpLnRvU3RyaW5nKDE2KTt9KTtcclxuICAgIH1cclxuXHJcbiAgICB0b0pTT04oKSB7XHJcbiAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgIHVzZXJuYW1lOiB0aGlzLnVzZXJuYW1lLFxyXG4gICAgICAgICAgaXNSZWFkeTogdGhpcy5pc1JlYWR5LFxyXG4gICAgICAgICAgY29sb3I6IHRoaXMuY29sb3JcclxuICAgICAgICB9O1xyXG4gICAgICB9XHJcblxyXG59IiwiaW1wb3J0IHsgUGxheWVyIH0gZnJvbSBcIi4vUGxheWVyXCI7XHJcblxyXG5leHBvcnQgY2xhc3MgUm9vbSB7XHJcbiAgICBwcml2YXRlIHBsYXllcnM6IFBsYXllcltdID0gW107XHJcbiAgICBwcml2YXRlIG1heFNpemU6IG51bWJlcjtcclxuICAgIHByaXZhdGUgaG9zdDogUGxheWVyO1xyXG4gICAgcHJpdmF0ZSBjb2RlOiBzdHJpbmc7XHJcblxyXG5cclxuICAgIGNvbnN0cnVjdG9yKGNvZGU6IHN0cmluZywgaG9zdDogUGxheWVyLCBwbGF5ZXJzPzogUGxheWVyW10sIG1heFNpemU6IG51bWJlciA9IDUpIHtcclxuICAgICAgICB0aGlzLmNvZGUgPSBjb2RlO1xyXG4gICAgICAgIHRoaXMuaG9zdCA9IGhvc3Q7XHJcbiAgICAgICAgdGhpcy5tYXhTaXplID0gbWF4U2l6ZTtcclxuXHJcbiAgICAgICAgaWYgKHBsYXllcnMgIT0gdW5kZWZpbmVkKSB7XHJcbiAgICAgICAgICAgIHRoaXMucGxheWVycyA9IHBsYXllcnM7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2V7XHJcbiAgICAgICAgICAgIHRoaXMuYWRkUGxheWVyKGhvc3QpO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIGFkZFBsYXllcihwbGF5ZXI6IFBsYXllcik6IGJvb2xlYW4ge1xyXG5cclxuICAgICAgICBpZiAodGhpcy5wbGF5ZXJzLmxlbmd0aCA+PSB0aGlzLm1heFNpemUpIHtcclxuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgdGhpcy5wbGF5ZXJzLnB1c2gocGxheWVyKVxyXG4gICAgICAgIHJldHVybiB0cnVlO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBnZXRDb2RlKCkge1xyXG4gICAgICAgIHJldHVybiB0aGlzLmNvZGU7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIGdldFBsYXllcnMoKTogUGxheWVyW10ge1xyXG4gICAgICAgIHJldHVybiB0aGlzLnBsYXllcnM7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIGdldEhvc3QoKTogUGxheWVyIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5ob3N0O1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBzZXRIb3N0KHBsYXllcjogUGxheWVyKSB7XHJcbiAgICAgICAgdGhpcy5ob3N0ID0gcGxheWVyO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBzZXRQbGF5ZXJzKHBsYXllcnM6IFBsYXllcltdKXtcclxuICAgICAgICB0aGlzLnBsYXllcnMgPSBwbGF5ZXJzO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBzZXRNYXhTaXplKG5ld1NpemU6IG51bWJlcil7XHJcbiAgICAgICAgdGhpcy5tYXhTaXplID0gbmV3U2l6ZTtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgZ2V0TWF4U2l6ZSgpe1xyXG4gICAgICAgIHJldHVybiB0aGlzLm1heFNpemU7XHJcbiAgICB9XHJcbn0iLCJpbXBvcnQgeyBzaG93RXJyb3JBbmltYXRpb24sIHNob3dSb29tVmlldywgdXBkYXRlUm9vbUxpc3QgfSBmcm9tIFwiLi4vTWVudU1hbmFnZXIvbG9naW5cIjtcclxuaW1wb3J0IHsgUGxheWVyIH0gZnJvbSBcIi4uL1ZpZXdNb2RlbHMvUGxheWVyXCI7XHJcblxyXG5sZXQgc29ja2V0OiBXZWJTb2NrZXQ7XHJcblxyXG5mdW5jdGlvbiBpbml0V2ViU29ja2V0KCkge1xyXG4gICAgc29ja2V0ID0gbmV3IFdlYlNvY2tldChgd3M6Ly8ke3dpbmRvdy5sb2NhdGlvbi5ob3N0bmFtZX06ODA4MGApO1xyXG4gICAgXHJcbiAgICBzb2NrZXQub25vcGVuID0gKCkgPT4ge1xyXG4gICAgICAgIGNvbnNvbGUubG9nKCdXZWJTb2NrZXQgY29ubmVjdGlvbiBlc3RhYmxpc2hlZCcpO1xyXG4gICAgfTtcclxuXHJcbiAgICBzb2NrZXQub25tZXNzYWdlID0gKGV2ZW50KSA9PiB7XHJcbiAgICAgICAgY29uc3QgZGF0YSA9IEpTT04ucGFyc2UoZXZlbnQuZGF0YSk7XHJcbiAgICAgICAgY29uc29sZS5sb2coJ01lc3NhZ2UgZnJvbSBzZXJ2ZXI6JywgZGF0YSk7XHJcbiAgICAgICAgXHJcbiAgICAgICAgc3dpdGNoIChkYXRhLnR5cGUpIHtcclxuICAgICAgICAgICAgY2FzZSAnSk9JTkVEX1JPT00nOlxyXG4gICAgICAgICAgICAgICAgc2hvd1Jvb21WaWV3KGV2ZW50LmRhdGEpO1xyXG4gICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgIGNhc2UgJ1JPT01fRE9FU19OT1RfRVhJU1QnOlxyXG4gICAgICAgICAgICAgICAgc2hvd0Vycm9yQW5pbWF0aW9uKCk7XHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgY2FzZSAnUk9PTV9EQVRBJzpcclxuICAgICAgICAgICAgICAgIHVwZGF0ZVJvb21MaXN0KGV2ZW50LmRhdGEpO1xyXG4gICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgIGNhc2UgJ0dBTUVQTEFZJzpcclxuICAgICAgICAgICAgICAgIC8vIHVwZGF0ZUdhbWVDYW52YXMoKTtcclxuICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICBjYXNlICdFUlJPUic6XHJcbiAgICAgICAgICAgICAgICBhbGVydChgRXJyb3I6ICR7ZGF0YS5tZXNzYWdlfWApO1xyXG4gICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgfVxyXG4gICAgfTtcclxuICAgIFxyXG4gICAgc29ja2V0Lm9uY2xvc2UgPSAoKSA9PiB7XHJcbiAgICAgICAgY29uc29sZS5sb2coJ1dlYlNvY2tldCBjb25uZWN0aW9uIGNsb3NlZCcpO1xyXG4gICAgfTtcclxuICAgIFxyXG4gICAgc29ja2V0Lm9uZXJyb3IgPSAoZXJyb3IpID0+IHtcclxuICAgICAgICBjb25zb2xlLmVycm9yKCdXZWJTb2NrZXQgZXJyb3I6JywgZXJyb3IpO1xyXG4gICAgfTtcclxufVxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZVJvb20odXNlcm5hbWU6IHN0cmluZykge1xyXG4gICAgaWYgKHNvY2tldCAmJiBzb2NrZXQucmVhZHlTdGF0ZSA9PT0gV2ViU29ja2V0Lk9QRU4pIHtcclxuICAgICAgICBzb2NrZXQuc2VuZChKU09OLnN0cmluZ2lmeSh7IHR5cGU6ICdDUkVBVEVfUk9PTScsIHVzZXJuYW1lOiB1c2VybmFtZSB9KSk7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICAgIGNvbnNvbGUuZXJyb3IoJ1dlYlNvY2tldCBjb25uZWN0aW9uIGlzIG5vdCBvcGVuJyk7XHJcbiAgICB9XHJcbn1cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBqb2luUm9vbShyb29tQ29kZTogc3RyaW5nLCB1c2VybmFtZTogc3RyaW5nKSB7XHJcbiAgICBpZiAoc29ja2V0ICYmIHNvY2tldC5yZWFkeVN0YXRlID09PSBXZWJTb2NrZXQuT1BFTikge1xyXG4gICAgICAgIHNvY2tldC5zZW5kKEpTT04uc3RyaW5naWZ5KHsgdHlwZTogJ0pPSU5fUk9PTScsIHJvb21Db2RlOiByb29tQ29kZSwgdXNlcm5hbWU6IHVzZXJuYW1lIH0pKTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgICAgY29uc29sZS5lcnJvcignV2ViU29ja2V0IGNvbm5lY3Rpb24gaXMgbm90IG9wZW4nKTtcclxuICAgIH1cclxufVxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIHNldFBsYXllckRhdGEocGxheWVyOiBQbGF5ZXIsIHJvb21Db2RlOiBzdHJpbmcpIHtcclxuICAgIGlmIChzb2NrZXQgJiYgc29ja2V0LnJlYWR5U3RhdGUgPT09IFdlYlNvY2tldC5PUEVOKSB7XHJcbiAgICAgICAgc29ja2V0LnNlbmQoSlNPTi5zdHJpbmdpZnkoeyB0eXBlOiAnUExBWUVSX0RBVEEnLCBwbGF5ZXI6IHBsYXllciwgcm9vbUNvZGU6IHJvb21Db2RlfSkpO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgICBjb25zb2xlLmVycm9yKCdXZWJTb2NrZXQgY29ubmVjdGlvbiBpcyBub3Qgb3BlbicpO1xyXG4gICAgfVxyXG59XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gc2VuZEtleUV2ZW50VG9TZXJ2ZXIoa2V5OiBzdHJpbmcsIHByZXNzZWQ6IGJvb2xlYW4pe1xyXG4gICAgaWYgKHNvY2tldCAmJiBzb2NrZXQucmVhZHlTdGF0ZSA9PT0gV2ViU29ja2V0Lk9QRU4pIHtcclxuICAgICAgICBzb2NrZXQuc2VuZChKU09OLnN0cmluZ2lmeSh7IHR5cGU6ICdLRVlfRVZFTlQnLCBrZXk6IGtleSwgcHJlc3NlZDogcHJlc3NlZCB9KSk7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICAgIGNvbnNvbGUuZXJyb3IoJ1dlYlNvY2tldCBjb25uZWN0aW9uIGlzIG5vdCBvcGVuJyk7XHJcbiAgICB9XHJcbn1cclxuXHJcblxyXG5pbml0V2ViU29ja2V0KCk7XHJcbiIsIi8vIFRoZSBtb2R1bGUgY2FjaGVcbnZhciBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX18gPSB7fTtcblxuLy8gVGhlIHJlcXVpcmUgZnVuY3Rpb25cbmZ1bmN0aW9uIF9fd2VicGFja19yZXF1aXJlX18obW9kdWxlSWQpIHtcblx0Ly8gQ2hlY2sgaWYgbW9kdWxlIGlzIGluIGNhY2hlXG5cdHZhciBjYWNoZWRNb2R1bGUgPSBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX19bbW9kdWxlSWRdO1xuXHRpZiAoY2FjaGVkTW9kdWxlICE9PSB1bmRlZmluZWQpIHtcblx0XHRyZXR1cm4gY2FjaGVkTW9kdWxlLmV4cG9ydHM7XG5cdH1cblx0Ly8gQ3JlYXRlIGEgbmV3IG1vZHVsZSAoYW5kIHB1dCBpdCBpbnRvIHRoZSBjYWNoZSlcblx0dmFyIG1vZHVsZSA9IF9fd2VicGFja19tb2R1bGVfY2FjaGVfX1ttb2R1bGVJZF0gPSB7XG5cdFx0Ly8gbm8gbW9kdWxlLmlkIG5lZWRlZFxuXHRcdC8vIG5vIG1vZHVsZS5sb2FkZWQgbmVlZGVkXG5cdFx0ZXhwb3J0czoge31cblx0fTtcblxuXHQvLyBFeGVjdXRlIHRoZSBtb2R1bGUgZnVuY3Rpb25cblx0X193ZWJwYWNrX21vZHVsZXNfX1ttb2R1bGVJZF0obW9kdWxlLCBtb2R1bGUuZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXyk7XG5cblx0Ly8gUmV0dXJuIHRoZSBleHBvcnRzIG9mIHRoZSBtb2R1bGVcblx0cmV0dXJuIG1vZHVsZS5leHBvcnRzO1xufVxuXG4iLCIvLyBkZWZpbmUgZ2V0dGVyIGZ1bmN0aW9ucyBmb3IgaGFybW9ueSBleHBvcnRzXG5fX3dlYnBhY2tfcmVxdWlyZV9fLmQgPSAoZXhwb3J0cywgZGVmaW5pdGlvbikgPT4ge1xuXHRmb3IodmFyIGtleSBpbiBkZWZpbml0aW9uKSB7XG5cdFx0aWYoX193ZWJwYWNrX3JlcXVpcmVfXy5vKGRlZmluaXRpb24sIGtleSkgJiYgIV9fd2VicGFja19yZXF1aXJlX18ubyhleHBvcnRzLCBrZXkpKSB7XG5cdFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywga2V5LCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZGVmaW5pdGlvbltrZXldIH0pO1xuXHRcdH1cblx0fVxufTsiLCJfX3dlYnBhY2tfcmVxdWlyZV9fLm8gPSAob2JqLCBwcm9wKSA9PiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iaiwgcHJvcCkpIiwiLy8gZGVmaW5lIF9fZXNNb2R1bGUgb24gZXhwb3J0c1xuX193ZWJwYWNrX3JlcXVpcmVfXy5yID0gKGV4cG9ydHMpID0+IHtcblx0aWYodHlwZW9mIFN5bWJvbCAhPT0gJ3VuZGVmaW5lZCcgJiYgU3ltYm9sLnRvU3RyaW5nVGFnKSB7XG5cdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFN5bWJvbC50b1N0cmluZ1RhZywgeyB2YWx1ZTogJ01vZHVsZScgfSk7XG5cdH1cblx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICdfX2VzTW9kdWxlJywgeyB2YWx1ZTogdHJ1ZSB9KTtcbn07IiwiLy8gc3RhcnR1cFxuLy8gTG9hZCBlbnRyeSBtb2R1bGUgYW5kIHJldHVybiBleHBvcnRzXG4vLyBUaGlzIGVudHJ5IG1vZHVsZSBpcyByZWZlcmVuY2VkIGJ5IG90aGVyIG1vZHVsZXMgc28gaXQgY2FuJ3QgYmUgaW5saW5lZFxudmFyIF9fd2VicGFja19leHBvcnRzX18gPSBfX3dlYnBhY2tfcmVxdWlyZV9fKFwiLi9zcmMvV2ViU29ja2V0Q2xpZW50L3dlYnNvY2tldC50c1wiKTtcbiJdLCJuYW1lcyI6WyJjdXJyZW50Um9vbSIsImN1cnJlbnRQbGF5ZXIiLCJyb29tQ29kZUlucHV0IiwiZG9jdW1lbnQiLCJnZXRFbGVtZW50QnlJZCIsInVzZXJuYW1lSW5wdXQiLCJyb29tQnV0dG9uIiwicmVhZHlCdXR0b24iLCJsb2dpbkRpdiIsInJvb21EaXYiLCJjb2xvclBpY2tlciIsInJvb21Vc2Vyc0xpc3QiLCJyb29tQ29kZVNwYW4iLCJwbGF5ZXJDb3VudCIsImNvbG9yUGlja2VyRGl2Iiwic3RhcnRQcm9ncmVzc0JhciIsInVwZGF0ZUJ1dHRvbiIsInZhbHVlIiwidHJpbSIsImRpc2FibGVkIiwibGVuZ3RoIiwidGV4dENvbnRlbnQiLCJoYW5kbGVSb29tQWN0aW9uIiwidXNlcm5hbWUiLCJQbGF5ZXIiLCJpbm5lclRleHQiLCJjcmVhdGVSb29tIiwiam9pblJvb20iLCJ0b1VwcGVyQ2FzZSIsImhhbmRsZVJlYWR5U3RhdGUiLCJpc1JlYWR5Iiwic2V0UGxheWVyRGF0YSIsImdldENvZGUiLCJjbGFzc0xpc3QiLCJyZW1vdmUiLCJhZGQiLCJzaG93Um9vbVZpZXciLCJkYXRhIiwicm9vbUluZm8iLCJKU09OIiwicGFyc2UiLCJ0b1N0cmluZyIsIlJvb20iLCJnZXRIb3N0Iiwic3R5bGUiLCJiYWNrZ3JvdW5kQ29sb3IiLCJjb2xvciIsInBpY2tUZXh0Q29sb3JCYXNlZE9uQmdDb2xvckFkdmFuY2VkIiwiaW5uZXJIVE1MIiwidXBkYXRlUm9vbUxpc3QiLCJyZWFkeVBsYXllckNvdW50IiwibWF4UGxheWVyQ291bnQiLCJzZXRQbGF5ZXJzIiwic2V0SG9zdCIsInNldE1heFNpemUiLCJnZXRQbGF5ZXJzIiwiZ2V0TWF4U2l6ZSIsImZvckVhY2giLCJwbGF5ZXIiLCJwbGF5ZXJJdGVtIiwiY3JlYXRlRWxlbWVudCIsImluc2VydEFkamFjZW50SFRNTCIsImFwcGVuZENoaWxkIiwiZmlsdGVyIiwicCIsIndpZHRoIiwiTWF0aCIsImZsb29yIiwic2hvd0Vycm9yQW5pbWF0aW9uIiwic2V0VGltZW91dCIsInVwZGF0ZUNvbG9yUGlja2VyIiwidXBkYXRlUGxheWVyQ29sb3IiLCJiZ0NvbG9yIiwibGlnaHRDb2xvciIsImRhcmtDb2xvciIsImNoYXJBdCIsInN1YnN0cmluZyIsImMiLCJwYXJzZUludCIsIm1hcCIsImNvbCIsInBvdyIsIndpbmRvdyIsIm9ubG9hZCIsInN0YXJ0R2FtZSIsInRoaXMiLCJyZXBsYWNlIiwicmFuZG9tIiwidG9KU09OIiwiY29kZSIsImhvc3QiLCJwbGF5ZXJzIiwibWF4U2l6ZSIsInVuZGVmaW5lZCIsImFkZFBsYXllciIsInB1c2giLCJuZXdTaXplIiwic29ja2V0IiwicmVhZHlTdGF0ZSIsIldlYlNvY2tldCIsIk9QRU4iLCJzZW5kIiwic3RyaW5naWZ5IiwidHlwZSIsImNvbnNvbGUiLCJlcnJvciIsInJvb21Db2RlIiwic2VuZEtleUV2ZW50VG9TZXJ2ZXIiLCJrZXkiLCJwcmVzc2VkIiwibG9jYXRpb24iLCJob3N0bmFtZSIsIm9ub3BlbiIsImxvZyIsIm9ubWVzc2FnZSIsImV2ZW50IiwiYWxlcnQiLCJtZXNzYWdlIiwib25jbG9zZSIsIm9uZXJyb3IiLCJfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX18iLCJfX3dlYnBhY2tfcmVxdWlyZV9fIiwibW9kdWxlSWQiLCJjYWNoZWRNb2R1bGUiLCJleHBvcnRzIiwibW9kdWxlIiwiX193ZWJwYWNrX21vZHVsZXNfXyIsImQiLCJkZWZpbml0aW9uIiwibyIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZW51bWVyYWJsZSIsImdldCIsIm9iaiIsInByb3AiLCJwcm90b3R5cGUiLCJoYXNPd25Qcm9wZXJ0eSIsImNhbGwiLCJyIiwiU3ltYm9sIiwidG9TdHJpbmdUYWciXSwic291cmNlUm9vdCI6IiJ9